// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

 
model Account{
   id  String @id @default(auto()) @map("_id") @db.ObjectId
   userId String @db.ObjectId
   email String?
   type                String 
  provider        String
  providerAccountId  String
  refresh_token       String? @db.String
  access_token        String? @db.String
   expires_at  Int?
   refresh_token_expires_in Int?
   token_type String?
   scope String?
   id_token String?
   oauth_token_secret String?
   oauth_token String?
   session_state String? 
   user  User @relation(fields: [userId], references: [id] ,onDelete:Cascade)

  @@unique([provider, providerAccountId])

}
 

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name            String? @unique
  email           String?   @unique
  emailVerified   DateTime?
  city String
  pincode String
  state String
  address String
  registerNumber String
 
  hashpassword String 
    createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
 emergencywardno String
  ambulances String
  phone String 
 
  image         String?
  accounts      Account[]  
  sessions      Session[]
   
 
  @@map("users")
}

 model Session {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
   userId String @db.ObjectId
   expires      DateTime
   user  User @relation(fields: [userId], references: [id] ,onDelete:Cascade)
}

 

 model VerificationToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}